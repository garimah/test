# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  workflow_dispatch:
    manual-run:
      default: 'true'
      description: Run scan manually
      required: true
  push:
    branches:
      - main
      - 'releases/**' 
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env: 
      SPRINT_TAG: ''
    steps:
      - name: Print Branch name
        run: |
          echo ${{ github.ref }} and ${{ github.event_name }}
      - name: Print commit details
        run: |
          echo ${{ github.event.head_commit.message }} and ${{ github.event.commits[0].message }} and ${{ github.event.commits[0].author.email }}
          echo and ${{ github.event.commits[0].author.username }} and ${{ github.event.commits[0].author.name }} and ${{ github.event.commits[0].modified }}
          echo and ${{ github.event.commits[0].url }} and ${{ github.event.commits[0].timestamp }} ${{ github.event.commits[0].added }}
      - name: Print commit details
        run: |
           echo ${{ github.event.head_commit.message }} and ${{ github.event.commits[1].message }} and ${{ github.event.commits[1].author.email }}
           echo and ${{ github.event.commits[1].author.username }} and ${{ github.event.commits[1].author.name }} and ${{ github.event.commits[1].modified }}
           echo and ${{ github.event.commits[1].url }} and ${{ github.event.commits[1].timestamp }} ${{ github.event.commits[1].added }}
      - name: Print commit details
        run: |
           echo ${{ github.event.head_commit.message }} and ${{ github.event.commits[2].message }} and ${{ github.event.commits[2].author.email }}
           echo and ${{ github.event.commits[2].author.username }} and ${{ github.event.commits[2].author.name }} and ${{ github.event.commits[2].modified }}
           echo and ${{ github.event.commits[2].url }} and ${{ github.event.commits[2].timestamp }} ${{ github.event.commits[2].added }}
      - name: Print commit details
        run: |
          value=`cat version`
          echo "[sprint$value] ${{ github.event.commits[0].message }} [ ${{ github.event.commits[0].author.username }} ] ${{ github.event.commits[0].timestamp }} and ${{ github.event.commits[0].url }}"
#            echo " ${{ github.event.commits[1].message }} [ ${{ github.event.commits[1].author.username }} ] ${{ github.event.commits[1].timestamp }} and ${{ github.event.commits[1].url }}"
#            echo " ${{ github.event.commits[2].message }} [ ${{ github.event.commits[2].author.username }} ] ${{ github.event.commits[2].timestamp }} and ${{ github.event.commits[2].url }}"

      - name: Print sprinttag
        run: echo "${{ env.SPRINT_TAG }}"
      - uses: actions/checkout@v3
        with: 
          ref: ${{ github.ref }}
# Does not work          
#       - name: workflowdispatch
#         run: |
#           curl -L \
#           -X POST \
#           -H "Accept: application/vnd.github+json" \
#           -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}"\
#           -H "X-GitHub-Api-Version: 2022-11-28" \
#           https://api.github.com/repos/garimah/rnd/actions/workflows/maven-publish.yml/dispatches \
#           -d '{"ref":"${{ env.BRANCH }}","inputs":{"name":"Mona the Octocat","home":"San Francisco, CA"}}'
#         env:
#           BRANCH: master
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         
         
      - name: Actual build
        run: |
           cat version
           value=`cat version`
           echo "SPRINT_TAG=sprint$value" >> $GITHUB_ENV
           curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/garimah/rnd/dispatches \
            -d '{"event_type":"trigger_downstreams","client_payload":{"unit":false,"integration":true,"ref": "${{env.REF}}"}}' 
        env: 
          REF: ${{ github.ref }}
        
     

